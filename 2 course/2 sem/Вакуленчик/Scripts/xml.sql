GRANT CREATE ANY DIRECTORY TO ADMINCORE WITH ADMIN OPTION;
GRANT EXECUTE ON dbms_crypto TO ADMINCORE WITH GRANT OPTION;
GRANT EXECUTE ON dbms_xmldom TO ADMINCORE WITH GRANT OPTION;
GRANT EXECUTE ON dbms_xslprocessor TO ADMINCORE WITH GRANT OPTION;
GRANT EXECUTE ON dbms_xmlparser TO ADMINCORE WITH GRANT OPTION;
GRANT EXECUTE ON dbms_xmldom TO ADMINCORE WITH GRANT OPTION;
GRANT EXECUTE ON dbms_lob TO ADMINCORE WITH GRANT OPTION;



SELECT file_name FROM dba_data_files; 
CREATE OR REPLACE DIRECTORY EXPORT_DATA AS 
'E:\Apps\xml';
GRANT READ, WRITE ON DIRECTORY IMPORT_DATA TO ADMINCORE;

CREATE OR REPLACE DIRECTORY IMPORT_DATA AS 
'E:\Apps\xml';

CREATE OR REPLACE PROCEDURE EXPORT_Clients_TO_XML
IS
 doc DBMS_XMLDOM.DOMDocument;
 xdata XMLTYPE;
 CURSOR xmlcur IS
 SELECT XMLELEMENT(
 "Clients",
 XMLAttributes('http://www.w3.org/2001/XMLSchema' AS 
"xmlns:xsi",
 'http://www.oracle.com/Users.xsd' AS 
"xsi:nonamespaceSchemaLocation"),
 XMLAGG(XMLELEMENT("Client",
 xmlelement("id", ADMINCORE.Client.id),
 xmlelement("name", ADMINCORE.Client.name),
 xmlelement("surname", ADMINCORE.Client.surname),
 xmlelement("age", ADMINCORE.Client.age),
 xmlelement("email", ADMINCORE.Client.email)
 ))) from ADMINCORE.Client;
BEGIN
open xmlcur;
 LOOP
 FETCH xmlcur INTO xdata;
 EXIT WHEN xmlcur%notfound;
 END LOOP;
 CLOSE xmlcur;
 doc := DBMS_XMLDOM.NewDOMDocument(xdata);
 DBMS_XMLDOM.WRITETOFILE(doc, 'EXPORT_DATA/Clients.xml');
END;

exec EXPORT_Clients_TO_XML;

begin
    import_clients_from_xml();
end;
-----------------------IMPORT-------------------------------

CREATE OR REPLACE PROCEDURE IMPORT_CLIENTS_FROM_XML
IS
L_CLOB CLOB;
L_BFILE BFILE := BFILENAME('IMPORT_DATA', 'Clients.xml');
L_DEST_OFFSET INTEGER := 1;
L_SRC_OFFSET INTEGER := 1;
L_BFILE_CSID NUMBER := 0;
L_LANG_CONTEXT INTEGER := 0;
L_WARNING INTEGER := 0;
P DBMS_XMLPARSER.PARSER;
V_DOC DBMS_XMLDOM.DOMDOCUMENT;
V_ROOT_ELEMENT DBMS_XMLDOM.DOMELEMENT;
V_CHILD_NODES DBMS_XMLDOM.DOMNODELIST;
V_CURRENT_NODE DBMS_XMLDOM.DOMNODE;
cl Client%ROWTYPE;
BEGIN
DBMS_LOB.CREATETEMPORARY (L_CLOB, TRUE);
DBMS_LOB.FILEOPEN(L_BFILE, DBMS_LOB.FILE_READONLY);
DBMS_LOB.LOADCLOBFROMFILE(DEST_LOB => L_CLOB, SRC_BFILE => L_BFILE, AMOUNT => DBMS_LOB.LOBMAXSIZE, DEST_OFFSET => L_DEST_OFFSET, SRC_OFFSET => L_SRC_OFFSET, BFILE_CSID => L_BFILE_CSID, LANG_CONTEXT => L_LANG_CONTEXT, WARNING => L_WARNING);
DBMS_LOB.FILECLOSE(L_BFILE);
COMMIT;
P := DBMS_XMLPARSER.NEWPARSER;
DBMS_XMLPARSER.PARSECLOB(P, L_CLOB);
V_DOC := DBMS_XMLPARSER.GETDOCUMENT(P);
V_ROOT_ELEMENT := DBMS_XMLDOM.Getdocumentelement(V_DOC);
V_CHILD_NODES := DBMS_XMLDOM.GETCHILDRENBYTAGNAME(V_ROOT_ELEMENT, '*');
FOR i IN 0 .. DBMS_XMLDOM.GETLENGTH(V_CHILD_NODES) - 1 LOOP
V_CURRENT_NODE := DBMS_XMLDOM.ITEM(V_CHILD_NODES, i);
DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE, 'id/text()', cl.id);
DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE, 'name/text()', cl.name);
DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE, 'surname/text()', cl.surname);
DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE, 'age/text()', cl.age);
DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE, 'email/text()', cl.email);
INSERT INTO Client (id, name, surname, age, email) VALUES (cl.id, cl.name, cl.surname, cl.age, cl.email);
END LOOP;
DBMS_LOB.FREETEMPORARY(L_CLOB);
DBMS_XMLPARSER.FREEPARSER(P);
DBMS_XMLDOM.FREEDOCUMENT(V_DOC);
COMMIT;
END;


select * from client

EXPLAIN PLAN FOR
SELECT * FROM equipmentlist;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);
