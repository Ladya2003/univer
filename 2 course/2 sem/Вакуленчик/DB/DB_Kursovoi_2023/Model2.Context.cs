//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DB_Kursovoi_2023
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities2 : DbContext
    {
        public Entities2()
            : base("name=Entities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCOUNT> ACCOUNT { get; set; }
        public virtual DbSet<CAR> CAR { get; set; }
        public virtual DbSet<CLIENT> CLIENT { get; set; }
        public virtual DbSet<EQUIPMENT> EQUIPMENT { get; set; }
        public virtual DbSet<EQUIPMENTLIST> EQUIPMENTLIST { get; set; }
        public virtual DbSet<ORDERTABLE> ORDERTABLE { get; set; }
        public virtual DbSet<SUPPLIER> SUPPLIER { get; set; }
    
        public virtual int ADDNEWORDER(Nullable<decimal> p_ID, Nullable<decimal> p_IDCLIENT, Nullable<decimal> p_IDCAR, Nullable<decimal> p_QUANTITY, Nullable<decimal> p_ISTESTDRIVE)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var p_IDCLIENTParameter = p_IDCLIENT.HasValue ?
                new ObjectParameter("P_IDCLIENT", p_IDCLIENT) :
                new ObjectParameter("P_IDCLIENT", typeof(decimal));
    
            var p_IDCARParameter = p_IDCAR.HasValue ?
                new ObjectParameter("P_IDCAR", p_IDCAR) :
                new ObjectParameter("P_IDCAR", typeof(decimal));
    
            var p_QUANTITYParameter = p_QUANTITY.HasValue ?
                new ObjectParameter("P_QUANTITY", p_QUANTITY) :
                new ObjectParameter("P_QUANTITY", typeof(decimal));
    
            var p_ISTESTDRIVEParameter = p_ISTESTDRIVE.HasValue ?
                new ObjectParameter("P_ISTESTDRIVE", p_ISTESTDRIVE) :
                new ObjectParameter("P_ISTESTDRIVE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDNEWORDER", p_IDParameter, p_IDCLIENTParameter, p_IDCARParameter, p_QUANTITYParameter, p_ISTESTDRIVEParameter);
        }
    
        public virtual int DELETECAR(Nullable<decimal> p_ID)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETECAR", p_IDParameter);
        }
    
        public virtual int DELETECLIENT(Nullable<decimal> p_ID)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETECLIENT", p_IDParameter);
        }
    
        public virtual int DELETEORDER(Nullable<decimal> p_ID)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETEORDER", p_IDParameter);
        }
    
        public virtual ObjectResult<GETALLCARINFO_Result> GETALLCARINFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETALLCARINFO_Result>("GETALLCARINFO");
        }
    
        public virtual ObjectResult<GETALLORDERINFO_Result2> GETALLORDERINFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETALLORDERINFO_Result2>("GETALLORDERINFO");
        }
    
        public virtual ObjectResult<GETALLSUPPLIERINFO_Result> GETALLSUPPLIERINFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETALLSUPPLIERINFO_Result>("GETALLSUPPLIERINFO");
        }
    
        public virtual ObjectResult<GETCLIENTS_Result> GETCLIENTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETCLIENTS_Result>("GETCLIENTS");
        }
    
        public virtual int GETCLIENTS2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GETCLIENTS2");
        }
    
        public virtual int INSERTCAR(string iNSERTBRAND, string iNSERTMODEL, string iNSERTCOLOR, Nullable<decimal> iNSERTWEIGHT, Nullable<decimal> iNSERTCOST, string iNSERTIMGSOURCE, Nullable<decimal> iNSERTCOMPANYNAME, Nullable<decimal> iNSERTRATINGCAR)
        {
            var iNSERTBRANDParameter = iNSERTBRAND != null ?
                new ObjectParameter("INSERTBRAND", iNSERTBRAND) :
                new ObjectParameter("INSERTBRAND", typeof(string));
    
            var iNSERTMODELParameter = iNSERTMODEL != null ?
                new ObjectParameter("INSERTMODEL", iNSERTMODEL) :
                new ObjectParameter("INSERTMODEL", typeof(string));
    
            var iNSERTCOLORParameter = iNSERTCOLOR != null ?
                new ObjectParameter("INSERTCOLOR", iNSERTCOLOR) :
                new ObjectParameter("INSERTCOLOR", typeof(string));
    
            var iNSERTWEIGHTParameter = iNSERTWEIGHT.HasValue ?
                new ObjectParameter("INSERTWEIGHT", iNSERTWEIGHT) :
                new ObjectParameter("INSERTWEIGHT", typeof(decimal));
    
            var iNSERTCOSTParameter = iNSERTCOST.HasValue ?
                new ObjectParameter("INSERTCOST", iNSERTCOST) :
                new ObjectParameter("INSERTCOST", typeof(decimal));
    
            var iNSERTIMGSOURCEParameter = iNSERTIMGSOURCE != null ?
                new ObjectParameter("INSERTIMGSOURCE", iNSERTIMGSOURCE) :
                new ObjectParameter("INSERTIMGSOURCE", typeof(string));
    
            var iNSERTCOMPANYNAMEParameter = iNSERTCOMPANYNAME.HasValue ?
                new ObjectParameter("INSERTCOMPANYNAME", iNSERTCOMPANYNAME) :
                new ObjectParameter("INSERTCOMPANYNAME", typeof(decimal));
    
            var iNSERTRATINGCARParameter = iNSERTRATINGCAR.HasValue ?
                new ObjectParameter("INSERTRATINGCAR", iNSERTRATINGCAR) :
                new ObjectParameter("INSERTRATINGCAR", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTCAR", iNSERTBRANDParameter, iNSERTMODELParameter, iNSERTCOLORParameter, iNSERTWEIGHTParameter, iNSERTCOSTParameter, iNSERTIMGSOURCEParameter, iNSERTCOMPANYNAMEParameter, iNSERTRATINGCARParameter);
        }
    
        public virtual int INSERTUSER(string iNSERTLOGIN, string iNSERTPASSWORD, string iNSERTNAME, string iNSERTSURNAME, Nullable<decimal> iNSERTAGE, string iNSERTEMAIL)
        {
            var iNSERTLOGINParameter = iNSERTLOGIN != null ?
                new ObjectParameter("INSERTLOGIN", iNSERTLOGIN) :
                new ObjectParameter("INSERTLOGIN", typeof(string));
    
            var iNSERTPASSWORDParameter = iNSERTPASSWORD != null ?
                new ObjectParameter("INSERTPASSWORD", iNSERTPASSWORD) :
                new ObjectParameter("INSERTPASSWORD", typeof(string));
    
            var iNSERTNAMEParameter = iNSERTNAME != null ?
                new ObjectParameter("INSERTNAME", iNSERTNAME) :
                new ObjectParameter("INSERTNAME", typeof(string));
    
            var iNSERTSURNAMEParameter = iNSERTSURNAME != null ?
                new ObjectParameter("INSERTSURNAME", iNSERTSURNAME) :
                new ObjectParameter("INSERTSURNAME", typeof(string));
    
            var iNSERTAGEParameter = iNSERTAGE.HasValue ?
                new ObjectParameter("INSERTAGE", iNSERTAGE) :
                new ObjectParameter("INSERTAGE", typeof(decimal));
    
            var iNSERTEMAILParameter = iNSERTEMAIL != null ?
                new ObjectParameter("INSERTEMAIL", iNSERTEMAIL) :
                new ObjectParameter("INSERTEMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTUSER", iNSERTLOGINParameter, iNSERTPASSWORDParameter, iNSERTNAMEParameter, iNSERTSURNAMEParameter, iNSERTAGEParameter, iNSERTEMAILParameter);
        }
    
        public virtual int UPDATECAR(Nullable<decimal> p_ID, string iNSERTBRAND, string iNSERTMODEL, string iNSERTCOLOR, Nullable<decimal> iNSERTWEIGHT, Nullable<decimal> iNSERTCOST, Nullable<decimal> iNSERTDESCRIPTION, Nullable<decimal> iNSERTCOMPANYNAME, Nullable<decimal> iNSERTRATINGCAR)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var iNSERTBRANDParameter = iNSERTBRAND != null ?
                new ObjectParameter("INSERTBRAND", iNSERTBRAND) :
                new ObjectParameter("INSERTBRAND", typeof(string));
    
            var iNSERTMODELParameter = iNSERTMODEL != null ?
                new ObjectParameter("INSERTMODEL", iNSERTMODEL) :
                new ObjectParameter("INSERTMODEL", typeof(string));
    
            var iNSERTCOLORParameter = iNSERTCOLOR != null ?
                new ObjectParameter("INSERTCOLOR", iNSERTCOLOR) :
                new ObjectParameter("INSERTCOLOR", typeof(string));
    
            var iNSERTWEIGHTParameter = iNSERTWEIGHT.HasValue ?
                new ObjectParameter("INSERTWEIGHT", iNSERTWEIGHT) :
                new ObjectParameter("INSERTWEIGHT", typeof(decimal));
    
            var iNSERTCOSTParameter = iNSERTCOST.HasValue ?
                new ObjectParameter("INSERTCOST", iNSERTCOST) :
                new ObjectParameter("INSERTCOST", typeof(decimal));
    
            var iNSERTDESCRIPTIONParameter = iNSERTDESCRIPTION.HasValue ?
                new ObjectParameter("INSERTDESCRIPTION", iNSERTDESCRIPTION) :
                new ObjectParameter("INSERTDESCRIPTION", typeof(decimal));
    
            var iNSERTCOMPANYNAMEParameter = iNSERTCOMPANYNAME.HasValue ?
                new ObjectParameter("INSERTCOMPANYNAME", iNSERTCOMPANYNAME) :
                new ObjectParameter("INSERTCOMPANYNAME", typeof(decimal));
    
            var iNSERTRATINGCARParameter = iNSERTRATINGCAR.HasValue ?
                new ObjectParameter("INSERTRATINGCAR", iNSERTRATINGCAR) :
                new ObjectParameter("INSERTRATINGCAR", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATECAR", p_IDParameter, iNSERTBRANDParameter, iNSERTMODELParameter, iNSERTCOLORParameter, iNSERTWEIGHTParameter, iNSERTCOSTParameter, iNSERTDESCRIPTIONParameter, iNSERTCOMPANYNAMEParameter, iNSERTRATINGCARParameter);
        }
    
        public virtual int UPDATECLIENT(Nullable<decimal> p_ID, string iNSERTLOGIN, string iNSERTPASSWORD, string iNSERTNAME, string iNSERTSURNAME, Nullable<decimal> iNSERTAGE, string iNSERTEMAIL)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var iNSERTLOGINParameter = iNSERTLOGIN != null ?
                new ObjectParameter("INSERTLOGIN", iNSERTLOGIN) :
                new ObjectParameter("INSERTLOGIN", typeof(string));
    
            var iNSERTPASSWORDParameter = iNSERTPASSWORD != null ?
                new ObjectParameter("INSERTPASSWORD", iNSERTPASSWORD) :
                new ObjectParameter("INSERTPASSWORD", typeof(string));
    
            var iNSERTNAMEParameter = iNSERTNAME != null ?
                new ObjectParameter("INSERTNAME", iNSERTNAME) :
                new ObjectParameter("INSERTNAME", typeof(string));
    
            var iNSERTSURNAMEParameter = iNSERTSURNAME != null ?
                new ObjectParameter("INSERTSURNAME", iNSERTSURNAME) :
                new ObjectParameter("INSERTSURNAME", typeof(string));
    
            var iNSERTAGEParameter = iNSERTAGE.HasValue ?
                new ObjectParameter("INSERTAGE", iNSERTAGE) :
                new ObjectParameter("INSERTAGE", typeof(decimal));
    
            var iNSERTEMAILParameter = iNSERTEMAIL != null ?
                new ObjectParameter("INSERTEMAIL", iNSERTEMAIL) :
                new ObjectParameter("INSERTEMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATECLIENT", p_IDParameter, iNSERTLOGINParameter, iNSERTPASSWORDParameter, iNSERTNAMEParameter, iNSERTSURNAMEParameter, iNSERTAGEParameter, iNSERTEMAILParameter);
        }
    
        public virtual int UPDATEISTESTDRIVE(Nullable<decimal> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEISTESTDRIVE", oRDERIDParameter);
        }
    
        public virtual int UPDATEISTESTDRIVETOZERO(Nullable<decimal> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEISTESTDRIVETOZERO", oRDERIDParameter);
        }
    
        public virtual int UPDATEORDER(Nullable<decimal> p_ID, Nullable<decimal> p_IDCLIENT, Nullable<decimal> p_IDCAR, Nullable<decimal> p_QUANTITY, Nullable<decimal> p_ISTESTDRIVE)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var p_IDCLIENTParameter = p_IDCLIENT.HasValue ?
                new ObjectParameter("P_IDCLIENT", p_IDCLIENT) :
                new ObjectParameter("P_IDCLIENT", typeof(decimal));
    
            var p_IDCARParameter = p_IDCAR.HasValue ?
                new ObjectParameter("P_IDCAR", p_IDCAR) :
                new ObjectParameter("P_IDCAR", typeof(decimal));
    
            var p_QUANTITYParameter = p_QUANTITY.HasValue ?
                new ObjectParameter("P_QUANTITY", p_QUANTITY) :
                new ObjectParameter("P_QUANTITY", typeof(decimal));
    
            var p_ISTESTDRIVEParameter = p_ISTESTDRIVE.HasValue ?
                new ObjectParameter("P_ISTESTDRIVE", p_ISTESTDRIVE) :
                new ObjectParameter("P_ISTESTDRIVE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEORDER", p_IDParameter, p_IDCLIENTParameter, p_IDCARParameter, p_QUANTITYParameter, p_ISTESTDRIVEParameter);
        }
    
        public virtual int UPDATESUPPLIER(Nullable<decimal> p_ID, string iNSERTCOMPANYNAME, string iNSERTEMAIL)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var iNSERTCOMPANYNAMEParameter = iNSERTCOMPANYNAME != null ?
                new ObjectParameter("INSERTCOMPANYNAME", iNSERTCOMPANYNAME) :
                new ObjectParameter("INSERTCOMPANYNAME", typeof(string));
    
            var iNSERTEMAILParameter = iNSERTEMAIL != null ?
                new ObjectParameter("INSERTEMAIL", iNSERTEMAIL) :
                new ObjectParameter("INSERTEMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATESUPPLIER", p_IDParameter, iNSERTCOMPANYNAMEParameter, iNSERTEMAILParameter);
        }
    
        public virtual int INSERTEQUIPMENT(Nullable<decimal> iNSERTEQUIPMENTLISTID, Nullable<decimal> iNSERTCARID)
        {
            var iNSERTEQUIPMENTLISTIDParameter = iNSERTEQUIPMENTLISTID.HasValue ?
                new ObjectParameter("INSERTEQUIPMENTLISTID", iNSERTEQUIPMENTLISTID) :
                new ObjectParameter("INSERTEQUIPMENTLISTID", typeof(decimal));
    
            var iNSERTCARIDParameter = iNSERTCARID.HasValue ?
                new ObjectParameter("INSERTCARID", iNSERTCARID) :
                new ObjectParameter("INSERTCARID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTEQUIPMENT", iNSERTEQUIPMENTLISTIDParameter, iNSERTCARIDParameter);
        }
    
        public virtual int UPDATEQUANTITY(Nullable<decimal> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEQUANTITY", oRDERIDParameter);
        }
    
        public virtual int UPDATEQUANTITYDECREMENT(Nullable<decimal> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEQUANTITYDECREMENT", oRDERIDParameter);
        }
    }
}
