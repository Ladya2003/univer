
# $1 - первый аргумент, переданный в скрипт.
# -z - унарная операция которая проверяет, является ли строка пустой.
if [ -z "$1" ]; then    
	echo "parameters not found"
	exit
fi

if [ "$1" -eq "0" ]; then
    echo "The program has finished!"
    exit
fi

# проверка на int
# регулярному выражению ^[+-]?[0-9]+$, которое соответствует любому целому числу (положительному, отрицательному или нулю).
if ! [[ $1 =~ ^[+-]?[0-9]+$ ]]; then
	echo "$1 is not int"
	exit

#"ps" - команда для вывода информации о процессах
#"-p" - опция, указывающая, что следующий аргумент будет идентификатором процесса
#"$1" - значение переменной $1, которое предполагается идентификатором процесса
#">" - перенаправление вывода
#"/dev/null" - специальный файл в операционной системе, который игнорирует все данные, направленные в него
# также это проверка идентификатора на существование
elif ps -p $1 > /dev/null
then
	echo "Name: $0"
	echo "pid: $1"
    # идентификатор родительского процесса
	echo "ppid: `ps -o ppid= -p $1`"
	if [ "$2" == "fd" ]; then
    # Запускает цикл для каждого файла в директории /proc/$1/fd, где $1 — это идентификатор процесса.
	# -1 -> результаты выводятся по одному на строку
		for variable in `ls -1 /proc/$1/fd`
		do
        # Выводит дескриптор файла (fd) и его значение.
			echo fd $line = $variable
			((line++))
		done
	fi

else
	echo "pid $1 not found"
	exit
fi

